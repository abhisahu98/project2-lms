name: CI/CD Pipeline for Django LMS App

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_pass
          POSTGRES_DB: django_db
        ports:
          - 5432:5432

    steps:
      # Step 1: Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set Up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install Dependencies
      - name: Install dependencies
        working-directory: feedback_system
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run Migrations and Tests
      - name: Run migrations and tests
        working-directory: feedback_system
        env:
          DJANGO_SETTINGS_MODULE: feedback_system.settings
          DATABASE_URL: postgres://django_user:django_pass@localhost:5432/django_db
        run: |
          python manage.py migrate
          python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      # Step 1: Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup SSH for Deployment
      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: |
            ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 3: Deploy to Remote Server
      - name: Deploy to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SERVER_IP <<EOF
          docker pull your-dockerhub-username/project2-lms:latest
          docker stop project2-lms-container || true
          docker rm project2-lms-container || true
          docker run -d --name project2-lms-container -p 8000:8000 your-dockerhub-username/project2-lms:latest
          EOF
